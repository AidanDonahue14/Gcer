#include <kipr/wombat.h>
void forward(int speed, int ticks);
void light();   //LP3    RP0
void lineFollowCode(); 
void pause();
void lineFollowing();
void rightTurn(int speed, int ticks);
int closed = 1525;



int main()
{
  cmpc(0);
    cmpc(3);
    
    enable_servos();
    
    set_servo_position(0, 1825);
        pause();
        set_servo_position(3, 900);
    
  forward(100, 3000); // forward to middle line
    
    pause();
    
 rightTurn(50, 2200);   // right on to line
    
  pause();
    
lineFollowing(9500);    // line follow to cuppler
    
    pause();
    
    set_servo_position(3, closed); //close claw
    
    pause();
    
    cmpc(0);
    cmpc(3);

    motor(0, -100);
    motor(3, -100);
    msleep(1000);
    
    pause();
    
    cmpc(0);
    cmpc(3);
    
    rightTurn(100, 4400);  //180
    
    pause();
    
    cmpc(0);
    cmpc(3);
    
    lineFollowing(14500); //line follow back
    
    pause();
    
    cmpc(0);
    cmpc(3);
    
    motor(0, -100);
    motor(3, 100);
    msleep(300);

    cmpc(0);
    cmpc(3);
    
    forward (0, 1000); //wait for ping pongs
    
    pause();
    
    cmpc(0);
    cmpc(3);
    
     rightTurn(50, 2200);   //vturn into box

    
    
    
    
    
    
    return 0;
}

void pause()
{
    motor(0,0);
    motor(3,0);
    msleep(300);
}    
    
    
void forward(int speed, int ticks)
{
    
    while (gmpc(0) < ticks && gmpc(3)< ticks)
    {
    motor(0,speed);
    motor(3,speed);
        
    }
}

void light()
    
{
    while(analog(1) >3200)
    {
        motor(0,0);
        motor(3,0);
        msleep(10);
    }
    
    
}

void lineFollowCode()
{
    if(analog(0) > 4000)
    {
        motor(0,70);
        motor(3, 10);
    }
    else 
    {
        motor(0,10);
        motor(3, 70);
        
    }

}

void rightTurn(int speed, int ticks)
{
    
    cmpc(3);
    while( gmpc(3) < ticks)
    {
      motor(3, speed);
      motor(0,0);
    }
}       
void lineFollowing(int ticks)
{
   while (gmpc(0) < ticks && gmpc(3)< ticks)
   {
     {
    if(analog(0) > 3800)
    {
        motor(0,70);
        motor(3, 20);
    }
    else 
    {
        motor(0,20);
        motor(3, 70);
        
    }

} 
   }
}
        
        
